{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"D:\\\\src\\\\personalRepos\\\\next-js\\\\pages\\\\users.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport axios from 'axios';\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport withAnalytics from '../src/hocs/withAnalytics';\n\nvar User = function User(_ref) {\n  var users = _ref.users;\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Usu\\xE1rios\")), users.map(function (user) {\n    return __jsx(\"li\", {\n      key: user.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, user.login);\n  }), __jsx(Link, {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Voltar\")));\n};\n\nUser.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var response;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return axios.get('https://api.github.com/orgs/rocketseat/members');\n\n        case 2:\n          response = _context.sent;\n          console.log(response.data);\n          return _context.abrupt(\"return\", {\n            users: response.data\n          });\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default withAnalytics()(User);","map":{"version":3,"sources":["D:/src/personalRepos/next-js/pages/users.js"],"names":["React","axios","Link","Head","withAnalytics","User","users","map","user","login","getInitialProps","get","response","console","log","data"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,aAAP,MAA0B,2BAA1B;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,MAAEC,KAAF,QAAEA,KAAF;AAAA,SACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADD,CADH,EAIGA,KAAK,CAACC,GAAN,CAAU,UAAAC,IAAI;AAAA,WACb;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsBD,IAAI,CAACC,KAA3B,CADa;AAAA,GAAd,CAJH,EAOE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAPF,CADW;AAAA,CAAb;;AAcAJ,IAAI,CAACK,eAAL;AAAA;AAAA;AAAA;AAAA,yBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACET,KAAK,CAACU,GAAN,CAAU,gDAAV,CADF;;AAAA;AACfC,UAAAA,QADe;AAGrBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AAHqB,2CAKd;AAAET,YAAAA,KAAK,EAAEM,QAAQ,CAACG;AAAlB,WALc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;AAQA,eAAeX,aAAa,GAAGC,IAAH,CAA5B","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport Link from 'next/link';\r\nimport Head from 'next/head';\r\n\r\nimport withAnalytics from '../src/hocs/withAnalytics';\r\n\r\nconst User = ({users}) => (\r\n  <div>\r\n     <Head>\r\n      <title>Usu√°rios</title>\r\n    </Head>\r\n    {users.map(user => (\r\n      <li key={user.login}>{user.login}</li>\r\n    ))}\r\n    <Link href=\"/\">\r\n      <a>Voltar</a>\r\n    </Link>\r\n  </div>\r\n);\r\n\r\nUser.getInitialProps = async () => {\r\n  const response = await axios.get('https://api.github.com/orgs/rocketseat/members');\r\n\r\n  console.log(response.data);\r\n  \r\n  return { users: response.data }\r\n}\r\n\r\nexport default withAnalytics()(User);\r\n"]},"metadata":{},"sourceType":"module"}